# Generated by Django 4.2.7 on 2023-12-27 07:53

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreatorMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creator_account_id', models.CharField(max_length=255)),
                ('creator_name', models.CharField(max_length=255)),
                ('creator_email', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CSMMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('csm_name', models.CharField(max_length=255)),
                ('csm_email', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.CharField(max_length=255)),
                ('customer_name', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(help_text='Name of the customer', max_length=255)),
                ('region', models.CharField(help_text='Region of the project', max_length=255)),
                ('customer_id', models.IntegerField(help_text='Customer ID')),
                ('project_id', models.CharField(help_text='Project ID', max_length=255)),
                ('opp_no', models.CharField(help_text='Opportunity number', max_length=255)),
                ('success_service', models.CharField(help_text='Type of success service', max_length=255)),
                ('csm', models.CharField(blank=True, help_text='Customer Success Manager', max_length=255, null=True)),
                ('psm', models.CharField(blank=True, help_text='Project Success Manager', max_length=255, null=True)),
                ('sdm', models.CharField(blank=True, help_text='Service Delivery Manager', max_length=255, null=True)),
                ('industry', models.CharField(blank=True, help_text='Industry of the project', max_length=255, null=True)),
                ('success_elements', models.CharField(blank=True, help_text='Success elements of the project', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the project', null=True)),
                ('date_created', models.DateField(blank=True, default=django.utils.timezone.now, help_text='Date when the project was created', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jira_key', models.CharField(max_length=255)),
                ('menu_card', models.CharField(max_length=255)),
                ('project_id', models.IntegerField()),
                ('issue_id', models.IntegerField()),
                ('csm', models.CharField(max_length=255)),
                ('sdo', models.CharField(max_length=255)),
                ('sdm', models.CharField(max_length=255)),
                ('approved_by_sdo', models.CharField(max_length=1)),
                ('approved_sdo_date', models.DateField(blank=True, null=True)),
                ('approved_by_csm', models.CharField(max_length=1)),
                ('approved_csm_date', models.DateField(blank=True, null=True)),
                ('approved_by_sdm', models.CharField(max_length=1)),
                ('approved_sdm_date', models.DateField(blank=True, null=True)),
                ('doc_link', models.CharField(max_length=255)),
                ('creator', models.CharField(max_length=255)),
                ('reporter', models.CharField(max_length=255)),
                ('assignee_email', models.EmailField(max_length=254)),
                ('status', models.BooleanField(default=False)),
                ('created_date', models.DateField()),
                ('updated_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ExpertMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('expert_account_id', models.CharField(max_length=255)),
                ('expert_name', models.CharField(max_length=255)),
                ('expert_email', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IndustryMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('industry_type_name', models.CharField(max_length=255)),
                ('industry_description', models.TextField()),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.IntegerField(help_text='Unique identifier for the issue')),
                ('issue_key', models.CharField(help_text='Key representing the issue', max_length=255)),
                ('issue_summary', models.CharField(help_text='Summary of the issue', max_length=255)),
                ('issue_description', models.TextField(help_text='Detailed description of the issue')),
                ('activity_short_name', models.CharField(help_text='Short name of the activity', max_length=255)),
                ('menu_id', models.CharField(help_text='ID of the menu', max_length=255)),
                ('created', models.DateTimeField(help_text='Date and time when the issue was created')),
                ('changelog_assignee_created', models.DateTimeField(blank=True, help_text='Date and time of changelog for assignee creation', null=True)),
                ('creator_name', models.CharField(help_text='Name of the issue creator', max_length=255)),
                ('creator_email', models.EmailField(help_text='Email of the issue creator', max_length=254)),
                ('assignee_id', models.IntegerField(help_text='ID of the issue assignee')),
                ('assignee_email', models.EmailField(help_text='Email of the issue assignee', max_length=254)),
                ('assignee_name', models.CharField(help_text='Name of the issue assignee', max_length=255)),
                ('project_id', models.IntegerField(help_text='ID of the project related to the issue')),
                ('project_key', models.CharField(help_text='Key representing the project', max_length=255)),
                ('project_name', models.CharField(help_text='Name of the project', max_length=255)),
                ('parent_id', models.IntegerField(help_text='ID of the parent issue')),
                ('parent_key', models.CharField(help_text='Key representing the parent issue', max_length=255)),
                ('parent_summary', models.CharField(help_text='Summary of the parent issue', max_length=255)),
                ('subtask', models.BooleanField(help_text='Boolean indicating if the issue is a subtask')),
                ('partner', models.CharField(help_text='Indicator if the issue is a partner', max_length=1)),
                ('issue_status', models.CharField(help_text='Status of the issue', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LogoMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('logo_file_name', models.CharField(max_length=8)),
                ('logo_file_type', models.CharField(max_length=10, null=True)),
                ('logo_file_size', models.IntegerField()),
                ('logo_url', models.CharField(max_length=255)),
                ('logo', models.BinaryField(null=True)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCardMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_card', models.CharField(max_length=10)),
                ('menu_description', models.TextField()),
                ('template_file_name', models.CharField(max_length=255, null=True)),
                ('template_file_path', models.TextField(null=True)),
                ('template_file_type', models.CharField(max_length=10, null=True)),
                ('template_file_size', models.IntegerField(null=True)),
                ('created_date', models.DateTimeField(blank=True, default=datetime.date(2023, 12, 27))),
                ('updated_date', models.DateTimeField(blank=True, default=datetime.date(2023, 12, 27))),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_card_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_card_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_card', models.CharField(help_text='Name of the menu card', max_length=255)),
                ('menu_description', models.TextField(help_text='Description of the menu')),
                ('menu_template', models.CharField(help_text='Type or name of the menu template', max_length=255)),
                ('template_path', models.CharField(help_text='Path to the menu template', max_length=255)),
                ('created_date', models.DateField(default=django.utils.timezone.now, help_text='Date when the menu template was created')),
            ],
        ),
        migrations.CreateModel(
            name='MenuSdo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_card', models.CharField(help_text='Name of the menu card', max_length=255)),
                ('sdo', models.CharField(help_text='SDO associated with the menu card', max_length=255)),
                ('email', models.EmailField(help_text='Email associated with the menu card', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField(help_text='Unique identifier for the project')),
                ('project_key', models.CharField(help_text='Key representing the project', max_length=255)),
                ('project_summary', models.CharField(help_text='Summary of the project', max_length=255)),
                ('project_logo', models.CharField(help_text='Logo url of the project', max_length=255)),
                ('created', models.DateField(default=django.utils.timezone.now, help_text='Date when the project was created')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
                ('project_logo_id', models.IntegerField(null=True)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PSMMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('psm_name', models.CharField(max_length=255)),
                ('psm_email', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='RegionMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('region_name', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ReportStatusMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('report_status_name', models.CharField(max_length=255)),
                ('status_description', models.CharField(max_length=255, null=True)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SDMMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sdm_name', models.CharField(max_length=255)),
                ('sdm_email', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='StatusMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('status_description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SuccessElementsMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('success_element_name', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SuccessServiceMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('success_service_name', models.CharField(max_length=255)),
                ('created_by', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SuccessReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jira_key', models.CharField(max_length=100)),
                ('product', models.CharField(max_length=5, null=True)),
                ('capability', models.CharField(max_length=5, null=True)),
                ('sub_capability', models.CharField(max_length=5, null=True)),
                ('error_msg', models.CharField(max_length=255, null=True)),
                ('download_link', models.TextField(null=True)),
                ('approved_by_sdo', models.CharField(max_length=10, null=True)),
                ('approved_sdo_date', models.DateField(null=True)),
                ('approved_by_csm', models.CharField(max_length=10, null=True)),
                ('approved_csm_date', models.DateField(null=True)),
                ('approved_by_sdm', models.CharField(max_length=10, null=True)),
                ('approved_sdm_date', models.DateField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='success_report_created_by', to=settings.AUTH_USER_MODEL)),
                ('creator_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.creatormaster')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customermaster')),
                ('expert_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.expertmaster')),
                ('logo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.logomaster')),
                ('menu_card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.menucardmaster')),
                ('report_status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.reportstatusmaster')),
                ('status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.statusmaster')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='success_report_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SdoMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sdo_name', models.CharField(max_length=255)),
                ('sdo_email', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sdo_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sdo_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuSdoMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=255, null=True)),
                ('menu_card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.menucardmaster')),
                ('sdo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.sdomaster')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerMapping',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('opp_no', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=255, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('csm_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.csmmaster')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customermaster')),
                ('industry_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.industrymaster')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.projectmaster')),
                ('psm_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.psmmaster')),
                ('region_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.regionmaster')),
                ('sdm_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.sdmmaster')),
                ('success_elements_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.successelementsmaster')),
                ('success_service_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.successservicemaster')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
